<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Tuesday, September 22, 2020, 4:35 PM -->
<!-- MuClient version 5.05 -->

<!-- Plugin "Toastush" generated by Plugin Wizard -->

<muclient>
<plugin
   name="Toastush"
   author="Erick Rosso"
   id="a7a7299039c65bd9b9383853"
   language="Lua"
   purpose="A fully-featured Miriani soundpack."
   save_state="y"
   date_written="2020-09-22 16:28:47"
   requires="5.05"
   version="1.0"
   >
<description trim="y">
<![CDATA[
---------------------------------------------
    The Toastush soundpack aims to be a fully comprehensive soundpack for Miriani. Alongside providing immersive high quality sounds for common activities, the soundpack features a number of helpful systems such as optional text filtration, powerful plugins managing intensive calculations, and various ease-of access tools.

    A highly customizable configuration menu provides the tool for adjusting the soundpack's various features to your personal preference. Be sure to view the changelog for each release version and grow familiar with all the features Toastush has to offer! Tune a metafrequency communicator to 0.07 for community support.

    Toastush developers claim no credit for MUSHclient, recognizing it as the sole intelectual property of Nick Gammon of Gammon Software Solutions (https://mushclient.com). 

---------------------------------------------
]]>
</description>

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Plugin help  -->

<aliases>
  <alias
   enabled="y"
   script="OnHelp"
   match="^Toastush:help$"
   ignore_case="y"
   regexp="y"
  >
  </alias>

  <alias
   enabled="y"
   script="OnRegister"
   match="^Toastush:register$"
   ignore_case="y"
   regexp="y"
  >
  </alias>

  <alias
   enabled="y"
   script="OnInfo"
   match="^Toastush:info$"
   ignore_case="y"
   regexp="y"
  >
  </alias>

  <alias
   enabled="y"
   script="OnConfigure"
   match="^Toastush:config(?:ure)?\s?(\w+)?$"
   ignore_case="y"
   regexp="y"
  >
  </alias>

</aliases>

<script>
<![CDATA[
require("miriani.src.include")

function OnPluginInstall()
  assert(config:_init() == 0)
  assert(audio:_init() == 0)
end -- OnPluginInstall

function OnHelp()
  Note(GetPluginInfo(GetPluginID(), 3))
end-- OnHelp

function OnRegister()
  local name, version = GetPluginInfo(GetPluginID(), 1), GetPluginInfo(GetPluginID(), 19)
  Send(string.format("#$#register_soundpack %s | %s", name, version))
end -- OnRegister

function OnInfo()
  local ID = GetPluginID()
  Note(string.format("%s  --  version %s  --  Scripting-language: %s  -- Script-time: %s seconds", GetPluginInfo(ID, 1), GetPluginInfo(ID, 19), GetPluginInfo(ID, 5), GetPluginInfo(ID, 24)))
end -- OnInfo

function OnConfigure(name, line, wc)
  TMenu(wc[1] ~= "" and wc[1] or nil)
end -- OnConfigure

]]>
</script> 

</muclient>
